FROM ubuntu:20.04

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y
RUN apt-get install -y build-essential \
    nano \
    unzip \
    curl \
    locales \
    php \
    libapache2-mod-php \
    php-bcmath \
    php-cli \
    php-curl \
    php-fpm \
    php-gd \
    php-intl \
    php-ldap \
    php-mbstring \
    php-mysql \
    php-pgsql \
    php-soap \
    php-tideways \
    php-xdebug \
    php-xml \
    php-xmlrpc \
    php-zip \
    php-bz2 \
    php-dom \
    php-dev \
    php-pear \
    php-bcmath \
    apache2 \ 
    mysql-client \
    libmysqlclient-dev \
    php-mysql \
    libmcrypt-dev

RUN locale-gen pt_br.UTF-8

RUN ufw app list

RUN ufw app info "Apache Full"

RUN ufw allow in "Apache Full"

RUN apt-get install --reinstall ca-certificates -y

# Enable apache mod_rewrite
RUN a2enmod rewrite
RUN a2enmod actions
RUN a2enmod rewrite expires

# Change AllowOverride from None to All (between line 170 and 174)
RUN sed -i '170,174 s/AllowOverride None/AllowOverride All/g' /etc/apache2/apache2.conf

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
# see https://docs.moodle.org/36/en/OPcache
RUN { \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.max_accelerated_files=10000'; \
    echo 'opcache.revalidate_freq=60'; \
    echo 'opcache.use_cwd=1'; \
    echo 'opcache.validate_timestamps=1'; \
    echo 'opcache.save_comments=1'; \
    echo 'opcache.enable_file_override=0'; \
  } > /usr/local/etc/php/conf.d/opcache-recommended.ini

ADD src/ /var/www/html/src/
ADD data/ /var/data/

RUN chown $USER:www-data -R /var/data
RUN chmod u=rwX,g=srX,o=rX -R /var/data
RUN find /var/data -type d -exec chmod g=rwxs "{}" \;
RUN find /var/data -type f -exec chmod g=rws "{}" \;

RUN chown $USER:www-data -R /var/www/html
RUN chmod u=rwX,g=srX,o=rX -R /var/www/html
RUN find /var/data -type d -exec chmod g=rwxs "{}" \;
RUN find /var/data -type f -exec chmod g=rws "{}" \;

# Start the webserver
RUN service apache2 restart

RUN cd /usr/local/lib/ && curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer

EXPOSE 8080 80

ENTRYPOINT ["apache2-foreground"]